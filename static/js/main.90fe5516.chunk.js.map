{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","filter","query","onChosenTodo","crossClicked","filteredTodos","useState","selectedTodo","setSelectedTodo","completed","todo","title","toLowerCase","includes","className","map","id","higtlightEye","type","onClick","selectButtonClick","TodoFilter","onChosenFilter","onQuery","onChange","e","target","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","TodoModal","handleDeleteClick","user","setUser","useEffect","fetchUser","a","response","href","email","name","App","setTodos","setFilter","setQuery","openTodo","setOpenTodo","setCrossClicked","setSetectedTodo","fetchData","todosFromServer","data","length","undefined","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.90fe5516.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  filter: string,\n  query: string,\n  onChosenTodo: (todo: Todo) => void,\n  crossClicked: boolean,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  filter,\n  query,\n  onChosenTodo,\n  crossClicked,\n}) => {\n  let filteredTodos = [...todos];\n  const [selectedTodo, setSelectedTodo] = useState<Todo>();\n\n  if (filter !== 'all') {\n    const completed = filter === 'completed';\n\n    filteredTodos = filteredTodos.filter(\n      todo => todo.completed === completed,\n    );\n  }\n\n  if (query) {\n    filteredTodos = filteredTodos.filter(\n      todo => todo.title.toLowerCase().includes(query.toLowerCase()),\n    );\n  }\n\n  const selectButtonClick = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {filteredTodos.map((todo: Todo) => {\n          const { id, title, completed } = todo;\n          const higtlightEye = selectedTodo?.id === id && crossClicked;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              className={higtlightEye ? 'has-background-info-light' : ''}\n              key={id}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={completed ? 'has-text-success' : 'has-text-danger'}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => {\n                    onChosenTodo(todo);\n                    selectButtonClick(todo);\n                  }}\n                >\n                  <span className=\"icon\">\n                    <i className={`far fa-eye${higtlightEye ? '-slash' : ''}`} />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","type Props = {\n  onChosenFilter: (data: string) => void,\n  onQuery: (data: string) => void,\n  query: string,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  onChosenFilter,\n  onQuery,\n  query,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(e) => onChosenFilter(e.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(e) => onQuery(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query\n          && (\n            <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n              {/* eslint-disable-next-line */}\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => onQuery('')}\n              />\n            </span>\n          )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo,\n  handleDeleteClick: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, handleDeleteClick }) => {\n  const {\n    id,\n    userId,\n    title,\n    completed,\n  } = todo;\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      const response = await getUser(todo.userId);\n\n      setUser(response);\n    };\n\n    fetchUser();\n  }, [userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {(user === null) ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleDeleteClick}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={user.email}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filter, setFilter] = useState<string>('all');\n  const [query, setQuery] = useState<string>('');\n  const [openTodo, setOpenTodo] = useState<boolean>(false);\n  const [crossClicked, setCrossClicked] = useState<boolean>(false);\n\n  const [selectedTodo, setSetectedTodo] = useState<Todo>();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const todosFromServer = await getTodos();\n\n      setTodos(todosFromServer);\n    };\n\n    fetchData();\n  }, []);\n\n  const onChosenFilter = (data: string) => {\n    setFilter(data);\n  };\n\n  const onQuery = (data: string) => {\n    setQuery(data);\n  };\n\n  const onChosenTodo = (todo: Todo) => {\n    setSetectedTodo(todo);\n    setOpenTodo(true);\n    setCrossClicked(true);\n  };\n\n  const todoModalClick = () => {\n    setOpenTodo(false);\n    setCrossClicked(false);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onChosenFilter={onChosenFilter}\n                onQuery={onQuery}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length === 0\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={todos}\n                    filter={filter}\n                    query={query}\n                    onChosenTodo={onChosenTodo}\n                    crossClicked={crossClicked}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {\n        selectedTodo !== undefined\n        && openTodo\n        && (\n          <TodoModal\n            todo={selectedTodo}\n            handleDeleteClick={todoModalClick}\n          />\n        )\n      }\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}